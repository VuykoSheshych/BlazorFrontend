@page "/users"

@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager
@inject GameHubClient GameHubClient
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>Users list</h3>

@if (users == null)
{
	<p>Loading...</p>
}
else if (users.Count == 0)
{
	<p>No games.</p>
}
else
{
	<ul>
		@foreach (var otheruser in users)
		{
			<li>
				@otheruser
				<button @onclick="() => InviteUser(otheruser)">Запросити</button>
			</li>
		}
	</ul>
}

@code {
	private List<string> users = new List<string>();
	private string currentUser = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		var client = HttpClientFactory.CreateClient("Frontend.ServerAPI");
		var response = await client.GetFromJsonAsync<List<string>>("api/users");
		users = response ?? new List<string>();

		var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
		currentUser = authState.User.Identity?.Name ?? string.Empty;
	}

	private async Task InviteUser(string invitedUser)
	{
		await GameHubClient.ConnectAsync();
		if (!string.IsNullOrEmpty(currentUser))
		{
			var gameId = await GameHubClient.CreateGameAsync(currentUser, invitedUser);
			NavigationManager.NavigateTo($"/game/active/{gameId}");
		}
	}
}